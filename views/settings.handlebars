<div class="row">
  <div class="col-md-12">
    <div class="card text-white bg-dark mb-3">
      <div class="card-header">
        Select items to include on your dashboard
      </div>
      <div class="card-body">
        {{!-- <h5 class="card-title">Select items to include on your dashboard</h5> --}}

        {{!-- News Feeds --}}
        {{!-- CNN--}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" data-associatedtextbox="cnn-input" value="" id="cnn">
          <label class="form-check-label" for="cnn">
            CNN
          </label>
        </div>
        {{!-- TEXT BOX FOR CNN --}}
        <div id="cnn-text-form" class="form-group hidden">
          <input type="email" class="form-control" id="cnn-input" placeholder="Keyword for news search">
        </div>

        {{!-- BBC--}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" data-associatedtextbox="bbc-input" value="" id="bbc">
          <label class="form-check-label" for="bbc">
            BBC
          </label>
        </div>
        {{!-- TEXT BOX FOR BBC --}}
        <div id="bbc-text-form" class="form-group hidden">
          <input type="email" class="form-control" id="bbc-input" placeholder="Keyword for news search">
        </div>

        {{!-- NYT --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" data-associatedtextbox="nyt-input" value="" id="nyt">
          <label class="form-check-label" for="nyt">
            New York Times
          </label>
        </div>
        {{!-- TEXT BOX FOR NYT --}}
        <div id="nyt-text-form" class="form-group hidden">
          <input type="email" class="form-control" id="nyt-input" placeholder="Keyword for news search">
        </div>

        {{!-- Personal Info --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="weather">
          <label class="form-check-label" for="weather">
            Weather
          </label>
        </div>

        {{!-- Fun --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" data-associatedtextbox="spotify-input" value="" id="spotify">
          <label class="form-check-label" for="spotify">
            Spotify
          </label>
        </div>

        {{!-- INPUT BOX FOR SPOTIFY --}}
        <div id="spotify-text-form" class="form-group hidden">
          <input type="text" class="form-control" id="spotify-input" placeholder="Enter a song or artist">
        </div>

        {{!-- Giphy --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="giphy">
          <label class="form-check-label" for="giphy">
            Giphy
          </label>
        </div>

        {{!-- Add solar array --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="solar">
          <label class="form-check-label" for="solar">
            Solar Array Information
          </label>
        </div>

        {{!-- Add Webcam --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" data-associatedtextbox="webcam-input" value="" id="webcam">
          <label class="form-check-label" for="webcam">
            Webcam
          </label>
        </div>

        {{!-- INPUT BOX FOR WEBCAM --}}
        <div id="webcam-text-form" class="form-group hidden">
          <input type="text" class="form-control" id="webcam-input" placeholder="Enter webcam URL">
        </div>

        {{!-- Add static links --}}
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" data-static-links="true" id="static-links">
          <label class="form-check-label" for="static-links">
            Add static-links
          </label>
        </div>

        {{!-- Static link input box --}}
        <div id="static-links-text-form" class="form-group hidden">
          <div id="add-links-div">
            <input type="text" class="form-control" id="static-links-input-0" placeholder="Input static link URL">
          </div>
          <button class="btn btn-primary " id="add-link-btn">+</button>
        </div>


        {{!-- FUTURE DEVELOPMENT --}}

        {{!-- <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="live-stream">
          <label class="form-check-label" for="live-stream">
            Live Stream - San Diego Zoo Pandas
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="user-iot">
          <label class="form-check-label" for="user-iot">
            Connect your own devices
          </label>
        </div>
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="to-do">
          <label class="form-check-label" for="to-do">
            To-do list
          </label>
        </div> --}}

        {{!-- Submit Button --}}
        <div class="text-right">
          <button class="btn btn-primary" id="save-btn">Save Selections</button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const cnnBtn = document.getElementById('cnn');
  const cnnTextForm = document.getElementById('cnn-text-form');
  const bbcBtn = document.getElementById('bbc');
  const bbcTextForm = document.getElementById('bbc-text-form');
  const nytimesBtn = document.getElementById('nyt');
  const nytTextForm = document.getElementById('nyt-text-form');
  const spotifyBtn = document.getElementById('spotify');
  const spotifyTextForm = document.getElementById('spotify-text-form');
  const staticBtn = document.getElementById('static-links');
  const staticTextForm = document.getElementById('static-links-text-form');
  const webcamBtn = document.getElementById('webcam');
  const webcamTextForm = document.getElementById('webcam-text-form');
  let linkCounter = 1;

  // if previously created settings, populate form with previous inputs 
  $(document).ready(function () {
    $.ajax({
      url: "/api/settings",
      method: "GET"
    }).then((results) => {
      let resultsArr = JSON.parse(results);
      // loop through results arr of objects
      resultsArr.forEach(item => {
        $("#" + item.id).prop('checked', true);
        console.log(resultsArr);
        // console.log($("#" + item.id + "-text-form"));
        if ($("#" + item.id).data("associatedtextbox")) {
          $("#" + item.id + "-text-form").removeClass('hidden');
          //populate text field
          $("#" + item.id + "-input").val(item.textInfo);
        }
        if ($("#" + item.id).data("static-links")) {
          $("#" + item.id + "-text-form").removeClass('hidden');
          // populate text boxes for additional urls 
          item.urls.forEach((link, index) => {
            if (index !== 0) {
              newLinkBox();
            }
            $("#" + item.id + "-input-" + index).val(link);
          })
        }
      })
    })
  });

  // eventListeners
  webcamBtn.addEventListener('change', (e) => {
    if (webcamTextForm.classList.contains('hidden')) {
      webcamTextForm.classList.remove('hidden')
    } else {
      webcamTextForm.classList.add('hidden')
    }
  });

  nytimesBtn.addEventListener('change', (e) => {
    if (nytTextForm.classList.contains('hidden')) {
      nytTextForm.classList.remove('hidden')
    } else {
      nytTextForm.classList.add('hidden')
    }
  });

  spotifyBtn.addEventListener('change', (e) => {
    if (spotifyTextForm.classList.contains('hidden')) {
      spotifyTextForm.classList.remove('hidden');
    } else {
      spotifyTextForm.classList.add('hidden');
    }
  });

  staticBtn.addEventListener('change', (e) => {
    if (staticTextForm.classList.contains('hidden')) {
      staticTextForm.classList.remove('hidden');
    } else {
      staticTextForm.classList.add('hidden');
    }
  });

  cnnBtn.addEventListener('change', (e) => {
    if (cnnTextForm.classList.contains('hidden')) {
      cnnTextForm.classList.remove('hidden');
    } else {
      cnnTextForm.classList.add('hidden');
    }
  });

  bbcBtn.addEventListener('change', (e) => {
    if (bbcTextForm.classList.contains('hidden')) {
      bbcTextForm.classList.remove('hidden');
    } else {
      bbcTextForm.classList.add('hidden');
    }
  });

  $("#add-link-btn").on("click", function (e) {
    // create a new input form and append to page
    newLinkBox();
  })

  $("#save-btn").on("click", (e) => {
    e.preventDefault();
    // capture what has been clicked on 
    // send name of buttons that are checked to true as an object

    let settingsArr = [];

    // loop through the form, and see if each option is selected 
    $('input[type=checkbox').each(function () {
      if (this.checked) {
        let settingsObj = {
          id: this.id
        }

        // add text/keywords to obj in settingsArr
        if ($(this).data("associatedtextbox")) {
          settingsObj.textInfo = $(`#${$(this).data("associatedtextbox")}`).val();
        }

        if ($(this).data("static-links")) {
          settingsObj.urls = [];
          $("#add-links-div").children().each(function () {
            if ($(this).val().trim() !== '') {
              settingsObj.urls.push($(this).val())
            }
          })
        }

        settingsArr.push(settingsObj);
      }
    });
    console.log(settingsArr);

    // POST our data to 
    $.ajax({
      url: "/api/settings",
      method: "POST",
      data: {
        data: JSON.stringify(settingsArr)
      }
    }).then(res => {
      // console.log(res);
      window.location.href = "/box-layout";
    })

  });

  function newLinkBox() {
    $("#add-links-div").append(`<input type="text" class="form-control" id="static-links-input-${linkCounter}" placeholder="Input static link URL">`)
    linkCounter++;
  };

</script>